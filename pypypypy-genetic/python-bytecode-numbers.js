let pyBytecodeNumber = [[{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_MODULO", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "", "ast": ["1%<span class=\"dup\">1</span>"], "stack": ["0"]}], [{"op": "UNARY_NEGATIVE", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["-1"], "stack": ["-1"]}, {"op": "", "ast": ["-(-1)"], "stack": ["1"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>"], "stack": ["6"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "BINARY_LSHIFT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "~<span class=\"dup\">-3</span>"], "stack": ["-3", "2"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>"], "stack": ["-12"]}, {"op": "", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)"], "stack": ["11"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "UNARY_INVERT", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))"], "stack": ["-13"]}, {"op": "", "ast": ["-(~(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)))"], "stack": ["13"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">4</span>"], "stack": ["16"]}, {"op": "UNARY_INVERT", "ast": ["-((~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">4</span>)"], "stack": ["-16"]}, {"op": "", "ast": ["~(-((~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">4</span>))"], "stack": ["15"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">4</span>"], "stack": ["16"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP_TWO", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>", "<span class=\"dup\">-2</span>"], "stack": ["1", "-2", "1", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "~<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>-<span class=\"dup\">-2</span>"], "stack": ["1", "-2", "3"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>-<span class=\"dup\">-2</span>"], "stack": ["1", "-16"]}, {"op": "", "ast": ["1-(~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>-<span class=\"dup\">-2</span>)"], "stack": ["17"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "BINARY_ADD", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>+<span class=\"dup\">9</span>"], "stack": ["18"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*<span class=\"dup\">-2</span>", "~<span class=\"dup\">4</span>"], "stack": ["4", "-5"]}, {"op": "UNARY_INVERT", "ast": ["(~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>"], "stack": ["-20"]}, {"op": "", "ast": ["~((~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>)"], "stack": ["19"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_ADD", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>*<span class=\"dup\">4</span>"], "stack": ["4", "16"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>+<span class=\"dup\">4</span>*<span class=\"dup\">4</span>"], "stack": ["20"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "ROT_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "24"]}, {"op": "BINARY_SUBTRACT", "ast": ["<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>", "1-~<span class=\"dup\">1</span>"], "stack": ["24", "3"]}, {"op": "", "ast": ["(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)-(1-~<span class=\"dup\">1</span>)"], "stack": ["21"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>-<span class=\"dup\">4</span>"], "stack": ["-2", "4", "-6"]}, {"op": "BINARY_XOR", "ast": ["~1", "(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)*(<span class=\"dup\">-2</span>-<span class=\"dup\">4</span>)"], "stack": ["-2", "-24"]}, {"op": "", "ast": ["~1^(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)*(<span class=\"dup\">-2</span>-<span class=\"dup\">4</span>)"], "stack": ["22"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_NEGATIVE", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["-24"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["23"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>"], "stack": ["25"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["-27"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)"], "stack": ["26"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["-28"]}, {"op": "", "ast": ["-(~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)"], "stack": ["28"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-32"]}, {"op": "BINARY_MODULO", "ast": ["~1", "~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "31"]}, {"op": "", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["29"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-32"]}, {"op": "", "ast": ["~1^<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["30"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-32"]}, {"op": "", "ast": ["~(~1&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["31"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_ADD", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>+<span class=\"dup\">2</span>"], "stack": ["2", "4"]}, {"op": "", "ast": ["(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;<span class=\"dup\">2</span>+<span class=\"dup\">2</span>"], "stack": ["32"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>"], "stack": ["1", "1", "1"]}, {"op": "DUP_TOP_TWO", "ast": ["1", "<span class=\"dup\">1</span>+<span class=\"dup\">1</span>"], "stack": ["1", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>+<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["1", "2", "1", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>+<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["1", "2", "4"]}, {"op": "BINARY_OR", "ast": ["1", "<span class=\"dup\">1</span>+<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["1", "32"]}, {"op": "", "ast": ["1|<span class=\"dup\">1</span>+<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["33"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>*<span class=\"dup\">2</span>"], "stack": ["2", "2", "4"]}, {"op": "BINARY_ADD", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>*<span class=\"dup\">2</span>"], "stack": ["2", "32"]}, {"op": "", "ast": ["(1+<span class=\"dup\">1</span>)+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>*<span class=\"dup\">2</span>)"], "stack": ["34"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_POWER", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>"], "stack": ["2", "2", "4"]}, {"op": "UNARY_INVERT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>**<span class=\"dup\">2</span>"], "stack": ["2", "32"]}, {"op": "BINARY_SUBTRACT", "ast": ["1+<span class=\"dup\">1</span>", "~(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>**<span class=\"dup\">2</span>)"], "stack": ["2", "-33"]}, {"op": "", "ast": ["(1+<span class=\"dup\">1</span>)-~(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>**<span class=\"dup\">2</span>)"], "stack": ["35"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>"], "stack": ["6"]}, {"op": "BINARY_MULTIPLY", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>"], "stack": ["6", "6"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>"], "stack": ["36"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>"], "stack": ["6"]}, {"op": "BINARY_MULTIPLY", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>"], "stack": ["6", "6"]}, {"op": "UNARY_INVERT", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>"], "stack": ["36"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>)"], "stack": ["-37"]}, {"op": "", "ast": ["-(~(((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>))"], "stack": ["37"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*<span class=\"dup\">-2</span>", "~<span class=\"dup\">4</span>"], "stack": ["4", "-5"]}, {"op": "UNARY_INVERT", "ast": ["(~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>"], "stack": ["-20"]}, {"op": "DUP_TOP", "ast": ["~((~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>)"], "stack": ["19"]}, {"op": "BINARY_ADD", "ast": ["~((~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>)", "<span class=\"dup\">19</span>"], "stack": ["19", "19"]}, {"op": "", "ast": ["~((~1*<span class=\"dup\">-2</span>)*~<span class=\"dup\">4</span>)+<span class=\"dup\">19</span>"], "stack": ["38"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "6"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>"], "stack": ["3", "6", "6"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>"], "stack": ["3", "36"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)+(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)*<span class=\"dup\">6</span>"], "stack": ["39"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "2", "8"]}, {"op": "ROT_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "10"]}, {"op": "BINARY_LSHIFT", "ast": ["<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "1+<span class=\"dup\">1</span>"], "stack": ["10", "2"]}, {"op": "", "ast": ["(<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)&lt;&lt;1+<span class=\"dup\">1</span>"], "stack": ["40"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>"], "stack": ["6"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>"], "stack": ["6", "6"]}, {"op": "BINARY_MULTIPLY", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "~<span class=\"dup\">6</span>"], "stack": ["6", "-7"]}, {"op": "UNARY_INVERT", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*~<span class=\"dup\">6</span>"], "stack": ["-42"]}, {"op": "", "ast": ["~(((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)*~<span class=\"dup\">6</span>)"], "stack": ["41"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>"], "stack": ["6"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>"], "stack": ["6", "6"]}, {"op": "BINARY_MULTIPLY", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>", "<span class=\"dup\">6</span>"], "stack": ["6", "6", "6"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>", "<span class=\"dup\">6</span>*<span class=\"dup\">6</span>"], "stack": ["6", "36"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>)+<span class=\"dup\">6</span>*<span class=\"dup\">6</span>"], "stack": ["42"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>"], "stack": ["25"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25", "25"]}, {"op": "BINARY_XOR", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>+<span class=\"dup\">25</span>"], "stack": ["25", "50"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>^<span class=\"dup\">25</span>+<span class=\"dup\">25</span>"], "stack": ["43"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27", "27"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>", "~<span class=\"dup\">27</span>"], "stack": ["27", "27", "-28"]}, {"op": "BINARY_XOR", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>-~<span class=\"dup\">27</span>"], "stack": ["27", "55"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>^<span class=\"dup\">27</span>-~<span class=\"dup\">27</span>"], "stack": ["44"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27", "27"]}, {"op": "BINARY_XOR", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>+<span class=\"dup\">27</span>"], "stack": ["27", "54"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>^<span class=\"dup\">27</span>+<span class=\"dup\">27</span>"], "stack": ["45"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_NEGATIVE", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["-24"]}, {"op": "DUP_TOP", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["23"]}, {"op": "BINARY_ADD", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>))", "<span class=\"dup\">23</span>"], "stack": ["23", "23"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>))+<span class=\"dup\">23</span>"], "stack": ["46"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>", "<span class=\"dup\">24</span>"], "stack": ["24", "24"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>"], "stack": ["48"]}, {"op": "UNARY_INVERT", "ast": ["-((1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>)"], "stack": ["-48"]}, {"op": "", "ast": ["~(-((1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>))"], "stack": ["47"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>", "<span class=\"dup\">24</span>"], "stack": ["24", "24"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>"], "stack": ["48"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>"], "stack": ["7", "7"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>"], "stack": ["49"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>"], "stack": ["25"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>+<span class=\"dup\">25</span>"], "stack": ["50"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>"], "stack": ["25"]}, {"op": "UNARY_INVERT", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25"]}, {"op": "BINARY_SUBTRACT", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "~<span class=\"dup\">25</span>"], "stack": ["25", "-26"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>-~<span class=\"dup\">25</span>"], "stack": ["51"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["-27"]}, {"op": "DUP_TOP", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)"], "stack": ["26"]}, {"op": "BINARY_ADD", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)", "<span class=\"dup\">26</span>"], "stack": ["26", "26"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)+<span class=\"dup\">26</span>"], "stack": ["52"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}, {"op": "UNARY_INVERT", "ast": ["-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)"], "stack": ["-54"]}, {"op": "", "ast": ["~(-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>))"], "stack": ["53"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "~<span class=\"dup\">27</span>"], "stack": ["27", "-28"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>"], "stack": ["55"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_NEGATIVE", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "-<span class=\"dup\">8</span>"], "stack": ["8", "-8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~(-<span class=\"dup\">8</span>)"], "stack": ["8", "7"]}, {"op": "", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(-<span class=\"dup\">8</span>)"], "stack": ["56"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["-28"]}, {"op": "DUP_TOP", "ast": ["-(~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)"], "stack": ["28"]}, {"op": "UNARY_INVERT", "ast": ["-(~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)", "<span class=\"dup\">28</span>"], "stack": ["28", "28"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)", "~<span class=\"dup\">28</span>"], "stack": ["28", "-29"]}, {"op": "", "ast": ["-(~(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)-~<span class=\"dup\">28</span>"], "stack": ["57"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-32"]}, {"op": "BINARY_MODULO", "ast": ["~1", "~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "31"]}, {"op": "DUP_TOP", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["29"]}, {"op": "BINARY_ADD", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">29</span>"], "stack": ["29", "29"]}, {"op": "", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">29</span>"], "stack": ["58"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-60"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["59"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-32"]}, {"op": "DUP_TOP", "ast": ["~1^<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["30"]}, {"op": "BINARY_ADD", "ast": ["~1^<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">30</span>"], "stack": ["30", "30"]}, {"op": "", "ast": ["(~1^<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">30</span>"], "stack": ["60"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}, {"op": "UNARY_INVERT", "ast": ["-(~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["-62"]}, {"op": "", "ast": ["~(-(~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)))"], "stack": ["61"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "UNARY_INVERT", "ast": ["-(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-64"]}, {"op": "", "ast": ["~(-(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["63"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-65"]}, {"op": "", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["65"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_POWER", "ast": ["-(~1)", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>"], "stack": ["2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>", "<span class=\"dup\">4</span>"], "stack": ["2", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["2", "64"]}, {"op": "", "ast": ["-(~1)^<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["66"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["68"]}, {"op": "UNARY_INVERT", "ast": ["-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-68"]}, {"op": "", "ast": ["~(-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["67"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["68"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["4", "-65"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["69"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~<span class=\"dup\">8</span>"], "stack": ["8", "-9"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>"], "stack": ["-72"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)"], "stack": ["71"]}, {"op": "UNARY_INVERT", "ast": ["-(~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>))"], "stack": ["-71"]}, {"op": "", "ast": ["~(-(~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)))"], "stack": ["70"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~<span class=\"dup\">8</span>"], "stack": ["8", "-9"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>"], "stack": ["-72"]}, {"op": "", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)"], "stack": ["71"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "24"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["72"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8", "8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>*<span class=\"dup\">8</span>"], "stack": ["8", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>)"], "stack": ["8", "-65"]}, {"op": "", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)-~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>)"], "stack": ["73"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "UNARY_INVERT", "ast": ["-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["-75"]}, {"op": "", "ast": ["~(-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))"], "stack": ["74"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["-76"]}, {"op": "", "ast": ["-(~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))"], "stack": ["76"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "ROT_FOUR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "~<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "-4"]}, {"op": "BINARY_POWER", "ast": ["~<span class=\"dup\">3</span>", "1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["-4", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~<span class=\"dup\">3</span>", "1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["-4", "3", "27"]}, {"op": "BINARY_ADD", "ast": ["~<span class=\"dup\">3</span>", "(1-~<span class=\"dup\">1</span>)*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["-4", "81"]}, {"op": "", "ast": ["~<span class=\"dup\">3</span>+(1-~<span class=\"dup\">1</span>)*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["77"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "ROT_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "BINARY_SUBTRACT", "ast": ["<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>", "1-~<span class=\"dup\">1</span>"], "stack": ["81", "3"]}, {"op": "", "ast": ["<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>-(1-~<span class=\"dup\">1</span>)"], "stack": ["78"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "UNARY_INVERT", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "BINARY_LSHIFT", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "~<span class=\"dup\">-5</span>"], "stack": ["-5", "4"]}, {"op": "UNARY_INVERT", "ast": ["~(~1*<span class=\"dup\">-2</span>)&lt;&lt;~<span class=\"dup\">-5</span>"], "stack": ["-80"]}, {"op": "", "ast": ["~(~(~1*<span class=\"dup\">-2</span>)&lt;&lt;~<span class=\"dup\">-5</span>)"], "stack": ["79"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "ROT_TWO", "ast": ["~1*<span class=\"dup\">-2</span>", "~<span class=\"dup\">4</span>"], "stack": ["4", "-5"]}, {"op": "BINARY_LSHIFT", "ast": ["~<span class=\"dup\">4</span>", "~1*<span class=\"dup\">-2</span>"], "stack": ["-5", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~<span class=\"dup\">4</span>&lt;&lt;~1*<span class=\"dup\">-2</span>"], "stack": ["-80"]}, {"op": "", "ast": ["-(~<span class=\"dup\">4</span>&lt;&lt;~1*<span class=\"dup\">-2</span>)"], "stack": ["80"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>"], "stack": ["81"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>", "<span class=\"dup\">1</span>"], "stack": ["1", "1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["1", "2"]}, {"op": "DUP_TOP_TWO", "ast": ["1", "~(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["1", "-3"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">1</span>", "<span class=\"dup\">-3</span>"], "stack": ["1", "-3", "1", "-3"]}, {"op": "BINARY_POWER", "ast": ["1", "~(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">1</span>-<span class=\"dup\">-3</span>"], "stack": ["1", "-3", "4"]}, {"op": "BINARY_ADD", "ast": ["1", "(~(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>))**(<span class=\"dup\">1</span>-<span class=\"dup\">-3</span>)"], "stack": ["1", "81"]}, {"op": "", "ast": ["1+(~(<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">1</span>))**(<span class=\"dup\">1</span>-<span class=\"dup\">-3</span>)"], "stack": ["82"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_OR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "", "ast": ["1-~<span class=\"dup\">1</span>|<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["83"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["84"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["84"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["-85"]}, {"op": "", "ast": ["-(~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>))"], "stack": ["85"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>"], "stack": ["25"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>", "<span class=\"dup\">25</span>"], "stack": ["25", "25", "25"]}, {"op": "BINARY_XOR", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>", "<span class=\"dup\">25</span>+<span class=\"dup\">25</span>"], "stack": ["25", "50"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>^<span class=\"dup\">25</span>+<span class=\"dup\">25</span>"], "stack": ["43"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>^<span class=\"dup\">25</span>+<span class=\"dup\">25</span>", "<span class=\"dup\">43</span>"], "stack": ["43", "43"]}, {"op": "", "ast": ["(~(~1*<span class=\"dup\">-2</span>)*<span class=\"dup\">-5</span>^<span class=\"dup\">25</span>+<span class=\"dup\">25</span>)+<span class=\"dup\">43</span>"], "stack": ["86"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>"], "stack": ["3", "3", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>)"], "stack": ["3", "3", "-10"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>)"], "stack": ["3", "-30"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))"], "stack": ["3", "29"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))"], "stack": ["87"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9", "9"]}, {"op": "BINARY_XOR", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["9", "81"]}, {"op": "", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["88"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "~<span class=\"dup\">9</span>"], "stack": ["9", "-10"]}, {"op": "UNARY_INVERT", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>"], "stack": ["-90"]}, {"op": "", "ast": ["~((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>)"], "stack": ["89"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "30"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["90"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "30"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["90"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>))"], "stack": ["-91"]}, {"op": "", "ast": ["-(~((1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)))"], "stack": ["91"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["~(1-~<span class=\"dup\">1</span>)"], "stack": ["-4"]}, {"op": "UNARY_INVERT", "ast": ["~(1-~<span class=\"dup\">1</span>)", "<span class=\"dup\">-4</span>"], "stack": ["-4", "-4"]}, {"op": "DUP_TOP_TWO", "ast": ["~(1-~<span class=\"dup\">1</span>)", "~<span class=\"dup\">-4</span>"], "stack": ["-4", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["~(1-~<span class=\"dup\">1</span>)", "~<span class=\"dup\">-4</span>", "<span class=\"dup\">-4</span>", "<span class=\"dup\">3</span>"], "stack": ["-4", "3", "-4", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1-~<span class=\"dup\">1</span>)", "~<span class=\"dup\">-4</span>", "<span class=\"dup\">-4</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["-4", "3", "-32"]}, {"op": "BINARY_SUBTRACT", "ast": ["~(1-~<span class=\"dup\">1</span>)", "~<span class=\"dup\">-4</span>*(<span class=\"dup\">-4</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["-4", "-96"]}, {"op": "", "ast": ["~(1-~<span class=\"dup\">1</span>)-~<span class=\"dup\">-4</span>*(<span class=\"dup\">-4</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["92"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "UNARY_NEGATIVE", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "~<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "-28"]}, {"op": "BINARY_OR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "-(~<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["3", "3", "28"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>|-(~<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["3", "31"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>|-(~<span class=\"dup\">3</span>**<span class=\"dup\">3</span>))"], "stack": ["93"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-6</span>"], "stack": ["-2", "-6", "-2", "-6"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>"], "stack": ["-2", "-6", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>"], "stack": ["-2", "-96"]}, {"op": "BINARY_MODULO", "ast": ["~1", "-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)"], "stack": ["-2", "96"]}, {"op": "", "ast": ["~1%-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)"], "stack": ["94"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_XOR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "3", "6"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "5"]}, {"op": "UNARY_NEGATIVE", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)"], "stack": ["96"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>))"], "stack": ["-96"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)))"], "stack": ["95"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_XOR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "3", "6"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "5"]}, {"op": "", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;(<span class=\"dup\">3</span>^<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)"], "stack": ["96"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>", "<span class=\"dup\">24</span>"], "stack": ["24", "24"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>"], "stack": ["48"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>", "<span class=\"dup\">48</span>"], "stack": ["48", "48"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>", "~<span class=\"dup\">48</span>"], "stack": ["48", "-49"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>)+<span class=\"dup\">24</span>)-~<span class=\"dup\">48</span>"], "stack": ["97"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP_TWO", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "BINARY_SUBTRACT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "~<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">-3</span>"], "stack": ["2", "-3", "2", "-3"]}, {"op": "BINARY_LSHIFT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "~<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>-<span class=\"dup\">-3</span>"], "stack": ["2", "-3", "5"]}, {"op": "BINARY_SUBTRACT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>", "~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>-<span class=\"dup\">-3</span>"], "stack": ["2", "-96"]}, {"op": "", "ast": ["(1&lt;&lt;<span class=\"dup\">1</span>)-(~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>-<span class=\"dup\">-3</span>)"], "stack": ["98"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["10", "10"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["100"]}, {"op": "UNARY_INVERT", "ast": ["-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>)"], "stack": ["-100"]}, {"op": "", "ast": ["~(-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>))"], "stack": ["99"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["10", "10"]}, {"op": "", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["100"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["10", "10"]}, {"op": "UNARY_INVERT", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["100"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>)"], "stack": ["-101"]}, {"op": "", "ast": ["-(~((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>))"], "stack": ["101"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["-(~1)", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "2", "8"]}, {"op": "DUP_TOP", "ast": ["-(~1)", "<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "10"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)", "<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["2", "10", "10"]}, {"op": "BINARY_XOR", "ast": ["-(~1)", "(<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["2", "100"]}, {"op": "", "ast": ["-(~1)^(<span class=\"dup\">2</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["102"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}, {"op": "DUP_TOP_TWO", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>"], "stack": ["7", "7"]}, {"op": "BINARY_ADD", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>"], "stack": ["7", "7", "7", "7"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>+<span class=\"dup\">7</span>"], "stack": ["7", "7", "14"]}, {"op": "BINARY_OR", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>*(<span class=\"dup\">7</span>+<span class=\"dup\">7</span>)"], "stack": ["7", "98"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)|<span class=\"dup\">7</span>*(<span class=\"dup\">7</span>+<span class=\"dup\">7</span>)"], "stack": ["103"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["-27"]}, {"op": "DUP_TOP", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)"], "stack": ["26"]}, {"op": "BINARY_ADD", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)", "<span class=\"dup\">26</span>"], "stack": ["26", "26"]}, {"op": "DUP_TOP", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)+<span class=\"dup\">26</span>"], "stack": ["52"]}, {"op": "BINARY_ADD", "ast": ["~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)+<span class=\"dup\">26</span>", "<span class=\"dup\">52</span>"], "stack": ["52", "52"]}, {"op": "", "ast": ["(~(-(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>)+<span class=\"dup\">26</span>)+<span class=\"dup\">52</span>"], "stack": ["104"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}, {"op": "DUP_TOP_TWO", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>"], "stack": ["7", "7"]}, {"op": "BINARY_ADD", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>"], "stack": ["7", "7", "7", "7"]}, {"op": "BINARY_OR", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>+<span class=\"dup\">7</span>"], "stack": ["7", "7", "14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>|<span class=\"dup\">7</span>+<span class=\"dup\">7</span>"], "stack": ["7", "15"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*(<span class=\"dup\">7</span>|<span class=\"dup\">7</span>+<span class=\"dup\">7</span>)"], "stack": ["105"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}, {"op": "UNARY_INVERT", "ast": ["-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)"], "stack": ["-54"]}, {"op": "DUP_TOP", "ast": ["~(-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>))"], "stack": ["53"]}, {"op": "BINARY_ADD", "ast": ["~(-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>))", "<span class=\"dup\">53</span>"], "stack": ["53", "53"]}, {"op": "", "ast": ["~(-((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>))+<span class=\"dup\">53</span>"], "stack": ["106"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>", "<span class=\"dup\">54</span>"], "stack": ["54", "54"]}, {"op": "UNARY_NEGATIVE", "ast": ["((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)+<span class=\"dup\">54</span>"], "stack": ["108"]}, {"op": "UNARY_INVERT", "ast": ["-(((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)+<span class=\"dup\">54</span>)"], "stack": ["-108"]}, {"op": "", "ast": ["~(-(((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)+<span class=\"dup\">54</span>))"], "stack": ["107"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>", "<span class=\"dup\">54</span>"], "stack": ["54", "54"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)+<span class=\"dup\">54</span>"], "stack": ["108"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>"], "stack": ["54"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>", "<span class=\"dup\">54</span>"], "stack": ["54", "54"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>", "~<span class=\"dup\">54</span>"], "stack": ["54", "-55"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>+<span class=\"dup\">27</span>)-~<span class=\"dup\">54</span>"], "stack": ["109"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "~<span class=\"dup\">27</span>"], "stack": ["27", "-28"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>"], "stack": ["55"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>", "<span class=\"dup\">55</span>"], "stack": ["55", "55"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>)+<span class=\"dup\">55</span>"], "stack": ["110"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>"], "stack": ["27"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "<span class=\"dup\">27</span>"], "stack": ["27", "27"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>", "~<span class=\"dup\">27</span>"], "stack": ["27", "-28"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>"], "stack": ["55"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>", "<span class=\"dup\">55</span>"], "stack": ["55", "55"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>", "~<span class=\"dup\">55</span>"], "stack": ["55", "-56"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)**<span class=\"dup\">3</span>-~<span class=\"dup\">27</span>)-~<span class=\"dup\">55</span>"], "stack": ["111"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-8"]}, {"op": "ROT_THREE", "ast": ["~1", "-<span class=\"dup\">-2</span>", "~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["-2", "2", "7"]}, {"op": "BINARY_POWER", "ast": ["~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">2</span>)", "~1", "-<span class=\"dup\">-2</span>"], "stack": ["7", "-2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">2</span>)", "(~1)**(-<span class=\"dup\">-2</span>)"], "stack": ["7", "4"]}, {"op": "", "ast": ["~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">2</span>)&lt;&lt;(~1)**(-<span class=\"dup\">-2</span>)"], "stack": ["112"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_NEGATIVE", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "-<span class=\"dup\">8</span>"], "stack": ["8", "-8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~(-<span class=\"dup\">8</span>)"], "stack": ["8", "7"]}, {"op": "DUP_TOP", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(-<span class=\"dup\">8</span>)"], "stack": ["56"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(-<span class=\"dup\">8</span>)", "<span class=\"dup\">56</span>"], "stack": ["56", "56"]}, {"op": "BINARY_SUBTRACT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(-<span class=\"dup\">8</span>)", "~<span class=\"dup\">56</span>"], "stack": ["56", "-57"]}, {"op": "", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(-<span class=\"dup\">8</span>)-~<span class=\"dup\">56</span>"], "stack": ["113"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "BINARY_LSHIFT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "~<span class=\"dup\">-3</span>"], "stack": ["-3", "2"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>"], "stack": ["-12"]}, {"op": "DUP_TOP", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)"], "stack": ["11"]}, {"op": "DUP_TOP", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)", "<span class=\"dup\">11</span>"], "stack": ["11", "11"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)", "<span class=\"dup\">11</span>", "<span class=\"dup\">11</span>"], "stack": ["11", "11", "11"]}, {"op": "BINARY_XOR", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)", "<span class=\"dup\">11</span>*<span class=\"dup\">11</span>"], "stack": ["11", "121"]}, {"op": "", "ast": ["~(~(1&lt;&lt;<span class=\"dup\">1</span>)&lt;&lt;~<span class=\"dup\">-3</span>)^<span class=\"dup\">11</span>*<span class=\"dup\">11</span>"], "stack": ["114"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>"], "stack": ["7", "7"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>"], "stack": ["49"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>", "<span class=\"dup\">49</span>"], "stack": ["49", "49"]}, {"op": "BINARY_ADD", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>", "<span class=\"dup\">49</span>", "<span class=\"dup\">49</span>"], "stack": ["49", "49", "49"]}, {"op": "BINARY_OR", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>", "<span class=\"dup\">49</span>+<span class=\"dup\">49</span>"], "stack": ["49", "98"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*<span class=\"dup\">7</span>|<span class=\"dup\">49</span>+<span class=\"dup\">49</span>"], "stack": ["115"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>"], "stack": ["3", "-4"]}, {"op": "ROT_FOUR", "ast": ["1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">-4</span>"], "stack": ["3", "-4", "3", "-4"]}, {"op": "BINARY_LSHIFT", "ast": ["<span class=\"dup\">-4</span>", "1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["-4", "3", "-4", "3"]}, {"op": "BINARY_XOR", "ast": ["<span class=\"dup\">-4</span>", "1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["-4", "3", "-32"]}, {"op": "BINARY_MULTIPLY", "ast": ["<span class=\"dup\">-4</span>", "1-~<span class=\"dup\">1</span>^~<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["-4", "-29"]}, {"op": "", "ast": ["<span class=\"dup\">-4</span>*(1-~<span class=\"dup\">1</span>^~<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["116"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-32"]}, {"op": "BINARY_MODULO", "ast": ["~1", "~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "31"]}, {"op": "DUP_TOP", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["29"]}, {"op": "BINARY_ADD", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">29</span>"], "stack": ["29", "29"]}, {"op": "DUP_TOP", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">29</span>"], "stack": ["58"]}, {"op": "UNARY_INVERT", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">29</span>", "<span class=\"dup\">58</span>"], "stack": ["58", "58"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">29</span>", "~<span class=\"dup\">58</span>"], "stack": ["58", "-59"]}, {"op": "", "ast": ["(~1%~(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)+<span class=\"dup\">29</span>)-~<span class=\"dup\">58</span>"], "stack": ["117"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-60"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["59"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))", "<span class=\"dup\">59</span>"], "stack": ["59", "59"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))+<span class=\"dup\">59</span>"], "stack": ["118"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-60"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["59"]}, {"op": "UNARY_INVERT", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))", "<span class=\"dup\">59</span>"], "stack": ["59", "59"]}, {"op": "BINARY_SUBTRACT", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))", "~<span class=\"dup\">59</span>"], "stack": ["59", "-60"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>-(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))-~<span class=\"dup\">59</span>"], "stack": ["119"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "DUP_TOP_TWO", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>", "<span class=\"dup\">-5</span>", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5", "-5", "-5"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>", "<span class=\"dup\">-5</span>*<span class=\"dup\">-5</span>"], "stack": ["-5", "-5", "25"]}, {"op": "BINARY_XOR", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>*(<span class=\"dup\">-5</span>*<span class=\"dup\">-5</span>)"], "stack": ["-5", "-125"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)^<span class=\"dup\">-5</span>*(<span class=\"dup\">-5</span>*<span class=\"dup\">-5</span>)"], "stack": ["120"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "UNARY_INVERT", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "DUP_TOP", "ast": ["~(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["-11"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)", "<span class=\"dup\">-11</span>"], "stack": ["-11", "-11"]}, {"op": "", "ast": ["~(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">-11</span>"], "stack": ["121"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "ROT_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "4", "-2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "4", "-2", "4", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>-<span class=\"dup\">-2</span>"], "stack": ["-2", "4", "-2", "6"]}, {"op": "BINARY_ADD", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>-<span class=\"dup\">-2</span>"], "stack": ["-2", "4", "-128"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>+(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>-<span class=\"dup\">-2</span>)"], "stack": ["-2", "-124"]}, {"op": "", "ast": ["~1^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>+(<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>-<span class=\"dup\">-2</span>)"], "stack": ["122"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}, {"op": "BINARY_ADD", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>"], "stack": ["62", "62"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">62</span>"], "stack": ["124"]}, {"op": "UNARY_INVERT", "ast": ["-(~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">62</span>)"], "stack": ["-124"]}, {"op": "", "ast": ["~(-(~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">62</span>))"], "stack": ["123"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}, {"op": "BINARY_ADD", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>"], "stack": ["62", "62"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">62</span>"], "stack": ["124"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>*<span class=\"dup\">5</span>"], "stack": ["5", "25"]}, {"op": "", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)*(<span class=\"dup\">5</span>*<span class=\"dup\">5</span>)"], "stack": ["125"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-8"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "~(<span class=\"dup\">-2</span>&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["-2", "-2", "7"]}, {"op": "BINARY_XOR", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(~(<span class=\"dup\">-2</span>&lt;&lt;-<span class=\"dup\">-2</span>))"], "stack": ["-2", "-128"]}, {"op": "", "ast": ["~1^(<span class=\"dup\">-2</span>)**(~(<span class=\"dup\">-2</span>&lt;&lt;-<span class=\"dup\">-2</span>))"], "stack": ["126"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">2</span>"], "stack": ["-2", "6"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">2</span>"], "stack": ["-128"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">2</span>)"], "stack": ["127"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "BINARY_ADD", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>", "<span class=\"dup\">64</span>"], "stack": ["64", "64"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">64</span>"], "stack": ["128"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>", "<span class=\"dup\">64</span>"], "stack": ["64", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>", "~<span class=\"dup\">64</span>"], "stack": ["64", "-65"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)-~<span class=\"dup\">64</span>"], "stack": ["129"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-65"]}, {"op": "DUP_TOP", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["65"]}, {"op": "BINARY_ADD", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))", "<span class=\"dup\">65</span>"], "stack": ["65", "65"]}, {"op": "", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))+<span class=\"dup\">65</span>"], "stack": ["130"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-65"]}, {"op": "DUP_TOP", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["65"]}, {"op": "UNARY_INVERT", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))", "<span class=\"dup\">65</span>"], "stack": ["65", "65"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))", "~<span class=\"dup\">65</span>"], "stack": ["65", "-66"]}, {"op": "", "ast": ["-(~(~1*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>))-~<span class=\"dup\">65</span>"], "stack": ["131"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "~<span class=\"dup\">4</span>"], "stack": ["4", "4", "-5"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "-(~<span class=\"dup\">4</span>)"], "stack": ["4", "4", "5"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;-(~<span class=\"dup\">4</span>)"], "stack": ["4", "128"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;-(~<span class=\"dup\">4</span>)"], "stack": ["132"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_POWER", "ast": ["-(~1)", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>"], "stack": ["2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>", "<span class=\"dup\">4</span>"], "stack": ["2", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["-(~1)", "<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["2", "64"]}, {"op": "DUP_TOP", "ast": ["-(~1)^<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["66"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)^<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>", "<span class=\"dup\">66</span>"], "stack": ["66", "66"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)^<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>", "~<span class=\"dup\">66</span>"], "stack": ["66", "-67"]}, {"op": "", "ast": ["(-(~1)^<span class=\"dup\">2</span>**<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">4</span>)-~<span class=\"dup\">66</span>"], "stack": ["133"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["68"]}, {"op": "UNARY_INVERT", "ast": ["-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["-68"]}, {"op": "DUP_TOP", "ast": ["~(-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))"], "stack": ["67"]}, {"op": "BINARY_ADD", "ast": ["~(-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))", "<span class=\"dup\">67</span>"], "stack": ["67", "67"]}, {"op": "", "ast": ["~(-(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))+<span class=\"dup\">67</span>"], "stack": ["134"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_ADD", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8", "8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>+<span class=\"dup\">8</span>"], "stack": ["8", "16"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~(<span class=\"dup\">8</span>+<span class=\"dup\">8</span>)"], "stack": ["8", "-17"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(<span class=\"dup\">8</span>+<span class=\"dup\">8</span>)"], "stack": ["-136"]}, {"op": "", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~(<span class=\"dup\">8</span>+<span class=\"dup\">8</span>))"], "stack": ["135"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["68"]}, {"op": "BINARY_ADD", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>", "<span class=\"dup\">68</span>"], "stack": ["68", "68"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)+<span class=\"dup\">68</span>"], "stack": ["136"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "BINARY_XOR", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["68"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>", "<span class=\"dup\">68</span>"], "stack": ["68", "68"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>", "~<span class=\"dup\">68</span>"], "stack": ["68", "-69"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>^<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)-~<span class=\"dup\">68</span>"], "stack": ["137"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["4", "-65"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["69"]}, {"op": "BINARY_ADD", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">69</span>"], "stack": ["69", "69"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))+<span class=\"dup\">69</span>"], "stack": ["138"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4", "4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["4", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>", "~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["4", "-65"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["69"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">69</span>"], "stack": ["69", "69"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>)", "~<span class=\"dup\">69</span>"], "stack": ["69", "-70"]}, {"op": "", "ast": ["(~1*<span class=\"dup\">-2</span>-~(<span class=\"dup\">4</span>&lt;&lt;<span class=\"dup\">4</span>))-~<span class=\"dup\">69</span>"], "stack": ["139"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP_TWO", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5", "5"]}, {"op": "BINARY_XOR", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>*<span class=\"dup\">5</span>"], "stack": ["5", "5", "25"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>^<span class=\"dup\">5</span>*<span class=\"dup\">5</span>"], "stack": ["5", "28"]}, {"op": "", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)*(<span class=\"dup\">5</span>^<span class=\"dup\">5</span>*<span class=\"dup\">5</span>)"], "stack": ["140"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~<span class=\"dup\">8</span>"], "stack": ["8", "-9"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>"], "stack": ["-72"]}, {"op": "DUP_TOP", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)"], "stack": ["71"]}, {"op": "BINARY_ADD", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)", "<span class=\"dup\">71</span>"], "stack": ["71", "71"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)+<span class=\"dup\">71</span>"], "stack": ["142"]}, {"op": "UNARY_INVERT", "ast": ["-(~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)+<span class=\"dup\">71</span>)"], "stack": ["-142"]}, {"op": "", "ast": ["~(-(~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)+<span class=\"dup\">71</span>))"], "stack": ["141"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~<span class=\"dup\">8</span>"], "stack": ["8", "-9"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>"], "stack": ["-72"]}, {"op": "DUP_TOP", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)"], "stack": ["71"]}, {"op": "BINARY_ADD", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)", "<span class=\"dup\">71</span>"], "stack": ["71", "71"]}, {"op": "", "ast": ["~((-(~1)&lt;&lt;<span class=\"dup\">2</span>)*~<span class=\"dup\">8</span>)+<span class=\"dup\">71</span>"], "stack": ["142"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">12</span>"], "stack": ["12", "12"]}, {"op": "UNARY_NEGATIVE", "ast": ["(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>"], "stack": ["144"]}, {"op": "UNARY_INVERT", "ast": ["-((~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>)"], "stack": ["-144"]}, {"op": "", "ast": ["~(-((~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>))"], "stack": ["143"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">12</span>"], "stack": ["12", "12"]}, {"op": "", "ast": ["(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>"], "stack": ["144"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">12</span>"], "stack": ["12", "12"]}, {"op": "UNARY_INVERT", "ast": ["(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>"], "stack": ["144"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>)"], "stack": ["-145"]}, {"op": "", "ast": ["-(~((~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">12</span>))"], "stack": ["145"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["8"]}, {"op": "DUP_TOP", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>", "<span class=\"dup\">8</span>"], "stack": ["8", "8", "8"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">8</span>*<span class=\"dup\">8</span>"], "stack": ["8", "64"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)&lt;&lt;<span class=\"dup\">2</span>", "~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>)"], "stack": ["8", "-65"]}, {"op": "DUP_TOP", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)-~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>)"], "stack": ["73"]}, {"op": "BINARY_ADD", "ast": ["(-(~1)&lt;&lt;<span class=\"dup\">2</span>)-~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>)", "<span class=\"dup\">73</span>"], "stack": ["73", "73"]}, {"op": "", "ast": ["((-(~1)&lt;&lt;<span class=\"dup\">2</span>)-~(<span class=\"dup\">8</span>*<span class=\"dup\">8</span>))+<span class=\"dup\">73</span>"], "stack": ["146"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1&lt;&lt;-<span class=\"dup\">-2</span>"], "stack": ["-8"]}, {"op": "DUP_TOP", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)"], "stack": ["7"]}, {"op": "DUP_TOP_TWO", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>"], "stack": ["7", "7"]}, {"op": "BINARY_ADD", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>"], "stack": ["7", "7", "7", "7"]}, {"op": "BINARY_ADD", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>", "<span class=\"dup\">7</span>+<span class=\"dup\">7</span>"], "stack": ["7", "7", "14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)", "<span class=\"dup\">7</span>+(<span class=\"dup\">7</span>+<span class=\"dup\">7</span>)"], "stack": ["7", "21"]}, {"op": "", "ast": ["~(~1&lt;&lt;-<span class=\"dup\">-2</span>)*(<span class=\"dup\">7</span>+(<span class=\"dup\">7</span>+<span class=\"dup\">7</span>))"], "stack": ["147"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "UNARY_INVERT", "ast": ["-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["-75"]}, {"op": "DUP_TOP", "ast": ["~(-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))"], "stack": ["74"]}, {"op": "BINARY_ADD", "ast": ["~(-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))", "<span class=\"dup\">74</span>"], "stack": ["74", "74"]}, {"op": "", "ast": ["~(-((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))+<span class=\"dup\">74</span>"], "stack": ["148"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)", "<span class=\"dup\">75</span>"], "stack": ["75", "75"]}, {"op": "UNARY_NEGATIVE", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))+<span class=\"dup\">75</span>"], "stack": ["150"]}, {"op": "UNARY_INVERT", "ast": ["-(((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))+<span class=\"dup\">75</span>)"], "stack": ["-150"]}, {"op": "", "ast": ["~(-(((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))+<span class=\"dup\">75</span>))"], "stack": ["149"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)", "<span class=\"dup\">75</span>"], "stack": ["75", "75"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))+<span class=\"dup\">75</span>"], "stack": ["150"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)", "<span class=\"dup\">75</span>"], "stack": ["75", "75"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)", "~<span class=\"dup\">75</span>"], "stack": ["75", "-76"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))-~<span class=\"dup\">75</span>"], "stack": ["151"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>"], "stack": ["3", "3", "24"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["3", "72"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)"], "stack": ["75"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>))"], "stack": ["-76"]}, {"op": "DUP_TOP", "ast": ["-(~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))"], "stack": ["76"]}, {"op": "BINARY_ADD", "ast": ["-(~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))", "<span class=\"dup\">76</span>"], "stack": ["76", "76"]}, {"op": "", "ast": ["-(~((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>)))+<span class=\"dup\">76</span>"], "stack": ["152"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "160"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["-155"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>))"], "stack": ["154"]}, {"op": "UNARY_INVERT", "ast": ["-(~((-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)))"], "stack": ["-154"]}, {"op": "", "ast": ["~(-(~((-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>))))"], "stack": ["153"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "160"]}, {"op": "UNARY_INVERT", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["-155"]}, {"op": "", "ast": ["~((-(~1)-~<span class=\"dup\">2</span>)-(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>))"], "stack": ["154"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">-5</span>"], "stack": ["-5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">-5</span>", "<span class=\"dup\">5</span>"], "stack": ["-5", "5", "5"]}, {"op": "BINARY_ADD", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">-5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["-5", "160"]}, {"op": "", "ast": ["~(~1*<span class=\"dup\">-2</span>)+(-<span class=\"dup\">-5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["155"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "UNARY_INVERT", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">12</span>"], "stack": ["12", "12"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~<span class=\"dup\">12</span>"], "stack": ["12", "-13"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-(~<span class=\"dup\">12</span>)"], "stack": ["12", "13"]}, {"op": "", "ast": ["(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*-(~<span class=\"dup\">12</span>)"], "stack": ["156"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">2</span>"], "stack": ["-2", "2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "~<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-3"]}, {"op": "DUP_TOP", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>"], "stack": ["-2", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["-2", "5", "5"]}, {"op": "BINARY_MODULO", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["-2", "160"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["158"]}, {"op": "UNARY_INVERT", "ast": ["-(~1%(-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>))"], "stack": ["-158"]}, {"op": "", "ast": ["~(-(~1%(-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>)))"], "stack": ["157"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "<span class=\"dup\">2</span>"], "stack": ["-2", "2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "-<span class=\"dup\">-2</span>", "~<span class=\"dup\">2</span>"], "stack": ["-2", "2", "-3"]}, {"op": "DUP_TOP", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>"], "stack": ["-2", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["-2", "5", "5"]}, {"op": "BINARY_MODULO", "ast": ["~1", "-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["-2", "160"]}, {"op": "", "ast": ["~1%(-<span class=\"dup\">-2</span>-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["158"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "DUP_TOP", "ast": ["~(~1*<span class=\"dup\">-2</span>)"], "stack": ["-5"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "<span class=\"dup\">-5</span>"], "stack": ["-5", "-5"]}, {"op": "BINARY_LSHIFT", "ast": ["~(~1*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">-5</span>"], "stack": ["-5", "5"]}, {"op": "UNARY_INVERT", "ast": ["~(~1*<span class=\"dup\">-2</span>)&lt;&lt;-<span class=\"dup\">-5</span>"], "stack": ["-160"]}, {"op": "", "ast": ["~(~(~1*<span class=\"dup\">-2</span>)&lt;&lt;-<span class=\"dup\">-5</span>)"], "stack": ["159"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "", "ast": ["-(~1)-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["160"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["160"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(-(~1)-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["-161"]}, {"op": "", "ast": ["-(~(-(~1)-~<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">5</span>))"], "stack": ["161"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "DUP_TOP", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>"], "stack": ["81"]}, {"op": "BINARY_ADD", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>", "<span class=\"dup\">81</span>"], "stack": ["81", "81"]}, {"op": "", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>+<span class=\"dup\">81</span>"], "stack": ["162"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "DUP_TOP", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>"], "stack": ["81"]}, {"op": "UNARY_INVERT", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>", "<span class=\"dup\">81</span>"], "stack": ["81", "81"]}, {"op": "BINARY_SUBTRACT", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>", "~<span class=\"dup\">81</span>"], "stack": ["81", "-82"]}, {"op": "", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*<span class=\"dup\">9</span>-~<span class=\"dup\">81</span>"], "stack": ["163"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>"], "stack": ["4"]}, {"op": "UNARY_INVERT", "ast": ["~1*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["4", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1*<span class=\"dup\">-2</span>", "~<span class=\"dup\">4</span>"], "stack": ["4", "-5"]}, {"op": "DUP_TOP", "ast": ["~1*<span class=\"dup\">-2</span>", "-(~<span class=\"dup\">4</span>)"], "stack": ["4", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["~1*<span class=\"dup\">-2</span>", "-(~<span class=\"dup\">4</span>)", "<span class=\"dup\">5</span>"], "stack": ["4", "5", "5"]}, {"op": "BINARY_OR", "ast": ["~1*<span class=\"dup\">-2</span>", "-(~<span class=\"dup\">4</span>)&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["4", "160"]}, {"op": "", "ast": ["~1*<span class=\"dup\">-2</span>|-(~<span class=\"dup\">4</span>)&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["164"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5"]}, {"op": "BINARY_OR", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "160"]}, {"op": "", "ast": ["-(~1)-~<span class=\"dup\">2</span>|<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["165"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "160"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "~(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["5", "-161"]}, {"op": "", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)-~(<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["166"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_OR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>|<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["83"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>|<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>", "<span class=\"dup\">83</span>"], "stack": ["83", "83"]}, {"op": "BINARY_SUBTRACT", "ast": ["1-~<span class=\"dup\">1</span>|<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>", "~<span class=\"dup\">83</span>"], "stack": ["83", "-84"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>|<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)-~<span class=\"dup\">83</span>"], "stack": ["167"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "81"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["84"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>", "<span class=\"dup\">84</span>"], "stack": ["84", "84"]}, {"op": "", "ast": ["((1-~<span class=\"dup\">1</span>)+<span class=\"dup\">3</span>*<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)+<span class=\"dup\">84</span>"], "stack": ["168"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "UNARY_INVERT", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "DUP_TOP", "ast": ["~(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))"], "stack": ["-13"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))", "<span class=\"dup\">-13</span>"], "stack": ["-13", "-13"]}, {"op": "", "ast": ["~(~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">-13</span>"], "stack": ["169"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP_TWO", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5", "5"]}, {"op": "BINARY_XOR", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "5", "160"]}, {"op": "BINARY_ADD", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>^<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "165"]}, {"op": "", "ast": ["(-(~1)-~<span class=\"dup\">2</span>)+(<span class=\"dup\">5</span>^<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>)"], "stack": ["170"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "DUP_TOP_TWO", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_ADD", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9", "9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>+<span class=\"dup\">9</span>"], "stack": ["9", "9", "18"]}, {"op": "BINARY_ADD", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>*(<span class=\"dup\">9</span>+<span class=\"dup\">9</span>)"], "stack": ["9", "162"]}, {"op": "", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>+<span class=\"dup\">9</span>*(<span class=\"dup\">9</span>+<span class=\"dup\">9</span>)"], "stack": ["171"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["10", "10"]}, {"op": "DUP_TOP", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["100"]}, {"op": "DUP_TOP", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>", "<span class=\"dup\">100</span>"], "stack": ["100", "100"]}, {"op": "BINARY_ADD", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>", "<span class=\"dup\">100</span>", "<span class=\"dup\">100</span>"], "stack": ["100", "100", "100"]}, {"op": "BINARY_XOR", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>", "<span class=\"dup\">100</span>+<span class=\"dup\">100</span>"], "stack": ["100", "200"]}, {"op": "", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>^<span class=\"dup\">100</span>+<span class=\"dup\">100</span>"], "stack": ["172"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_XOR", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["12"]}, {"op": "UNARY_INVERT", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">12</span>"], "stack": ["12", "12"]}, {"op": "DUP_TOP", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~<span class=\"dup\">12</span>"], "stack": ["12", "-13"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~<span class=\"dup\">12</span>", "<span class=\"dup\">-13</span>"], "stack": ["12", "-13", "-13"]}, {"op": "BINARY_OR", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~<span class=\"dup\">12</span>*<span class=\"dup\">-13</span>"], "stack": ["12", "169"]}, {"op": "", "ast": ["~1*(<span class=\"dup\">-2</span>^<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)|~<span class=\"dup\">12</span>*<span class=\"dup\">-13</span>"], "stack": ["173"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>*<span class=\"dup\">3</span>"], "stack": ["3", "3", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>)"], "stack": ["3", "3", "-10"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>)"], "stack": ["3", "-30"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))"], "stack": ["3", "29"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)*~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))"], "stack": ["87"]}, {"op": "BINARY_ADD", "ast": ["(1-~<span class=\"dup\">1</span>)*~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))", "<span class=\"dup\">87</span>"], "stack": ["87", "87"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*~(<span class=\"dup\">3</span>*~(<span class=\"dup\">3</span>*<span class=\"dup\">3</span>))+<span class=\"dup\">87</span>"], "stack": ["174"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9", "9"]}, {"op": "BINARY_XOR", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["9", "81"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["88"]}, {"op": "BINARY_ADD", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>", "<span class=\"dup\">88</span>"], "stack": ["88", "88"]}, {"op": "UNARY_NEGATIVE", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>)+<span class=\"dup\">88</span>"], "stack": ["176"]}, {"op": "UNARY_INVERT", "ast": ["-((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>)+<span class=\"dup\">88</span>)"], "stack": ["-176"]}, {"op": "", "ast": ["~(-((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>)+<span class=\"dup\">88</span>))"], "stack": ["175"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9", "9"]}, {"op": "BINARY_XOR", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["9", "81"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["88"]}, {"op": "BINARY_ADD", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>", "<span class=\"dup\">88</span>"], "stack": ["88", "88"]}, {"op": "", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>)+<span class=\"dup\">88</span>"], "stack": ["176"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9", "9"]}, {"op": "BINARY_XOR", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["9", "81"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>"], "stack": ["88"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>", "<span class=\"dup\">88</span>"], "stack": ["88", "88"]}, {"op": "BINARY_SUBTRACT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>", "~<span class=\"dup\">88</span>"], "stack": ["88", "-89"]}, {"op": "", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>^<span class=\"dup\">9</span>*<span class=\"dup\">9</span>)-~<span class=\"dup\">88</span>"], "stack": ["177"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "~<span class=\"dup\">9</span>"], "stack": ["9", "-10"]}, {"op": "UNARY_INVERT", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>"], "stack": ["-90"]}, {"op": "DUP_TOP", "ast": ["~((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>)"], "stack": ["89"]}, {"op": "BINARY_ADD", "ast": ["~((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>)", "<span class=\"dup\">89</span>"], "stack": ["89", "89"]}, {"op": "", "ast": ["~((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>)+<span class=\"dup\">89</span>"], "stack": ["178"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_LSHIFT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "UNARY_INVERT", "ast": ["1&lt;&lt;<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)"], "stack": ["-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)", "<span class=\"dup\">-3</span>"], "stack": ["-3", "-3"]}, {"op": "DUP_TOP", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>"], "stack": ["9"]}, {"op": "UNARY_INVERT", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "<span class=\"dup\">9</span>"], "stack": ["9", "9"]}, {"op": "BINARY_MULTIPLY", "ast": ["~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>", "~<span class=\"dup\">9</span>"], "stack": ["9", "-10"]}, {"op": "DUP_TOP", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>"], "stack": ["-90"]}, {"op": "BINARY_ADD", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>", "<span class=\"dup\">-90</span>"], "stack": ["-90", "-90"]}, {"op": "UNARY_INVERT", "ast": ["(~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>+<span class=\"dup\">-90</span>"], "stack": ["-180"]}, {"op": "", "ast": ["~((~(1&lt;&lt;<span class=\"dup\">1</span>)*<span class=\"dup\">-3</span>)*~<span class=\"dup\">9</span>+<span class=\"dup\">-90</span>)"], "stack": ["179"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>"], "stack": ["3", "-4"]}, {"op": "ROT_THREE", "ast": ["1-~<span class=\"dup\">1</span>", "~<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">-4</span>"], "stack": ["3", "-4", "3", "-4"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">-4</span>", "~<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "-4", "-4", "3"]}, {"op": "BINARY_XOR", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">-4</span>", "(~<span class=\"dup\">3</span>)**<span class=\"dup\">3</span>"], "stack": ["3", "-4", "-64"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">-4</span>^(~<span class=\"dup\">3</span>)**<span class=\"dup\">3</span>"], "stack": ["3", "60"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">-4</span>^(~<span class=\"dup\">3</span>)**<span class=\"dup\">3</span>)"], "stack": ["180"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_POWER", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "3", "27"]}, {"op": "BINARY_MULTIPLY", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>"], "stack": ["3", "30"]}, {"op": "DUP_TOP", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)"], "stack": ["90"]}, {"op": "UNARY_INVERT", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)", "<span class=\"dup\">90</span>"], "stack": ["90", "90"]}, {"op": "BINARY_SUBTRACT", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)", "~<span class=\"dup\">90</span>"], "stack": ["90", "-91"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)*(<span class=\"dup\">3</span>+<span class=\"dup\">3</span>**<span class=\"dup\">3</span>)-~<span class=\"dup\">90</span>"], "stack": ["181"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">14</span>"], "stack": ["14", "14"]}, {"op": "UNARY_INVERT", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>"], "stack": ["14", "-14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~(-<span class=\"dup\">14</span>)"], "stack": ["14", "13"]}, {"op": "", "ast": ["(~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*~(-<span class=\"dup\">14</span>)"], "stack": ["182"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">14</span>"], "stack": ["14", "14"]}, {"op": "UNARY_INVERT", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>"], "stack": ["14", "-14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "~(-<span class=\"dup\">14</span>)"], "stack": ["14", "13"]}, {"op": "UNARY_INVERT", "ast": ["(~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*~(-<span class=\"dup\">14</span>)"], "stack": ["182"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*~(-<span class=\"dup\">14</span>))"], "stack": ["-183"]}, {"op": "", "ast": ["-(~((~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*~(-<span class=\"dup\">14</span>)))"], "stack": ["183"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">14</span>"], "stack": ["14", "14"]}, {"op": "DUP_TOP_TWO", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>"], "stack": ["14", "-14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>", "<span class=\"dup\">14</span>", "<span class=\"dup\">-14</span>"], "stack": ["14", "-14", "14", "-14"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>", "<span class=\"dup\">14</span>*<span class=\"dup\">-14</span>"], "stack": ["14", "-14", "-196"]}, {"op": "BINARY_XOR", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "-<span class=\"dup\">14</span>-<span class=\"dup\">14</span>*<span class=\"dup\">-14</span>"], "stack": ["14", "182"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)^-<span class=\"dup\">14</span>-<span class=\"dup\">14</span>*<span class=\"dup\">-14</span>"], "stack": ["184"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_SUBTRACT", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP", "ast": ["-(~1)-~<span class=\"dup\">2</span>"], "stack": ["5"]}, {"op": "DUP_TOP_TWO", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>"], "stack": ["5", "5", "5", "5"]}, {"op": "ROT_THREE", "ast": ["-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>", "<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>"], "stack": ["5", "5", "160"]}, {"op": "BINARY_MULTIPLY", "ast": ["<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>", "-(~1)-~<span class=\"dup\">2</span>", "<span class=\"dup\">5</span>"], "stack": ["160", "5", "5"]}, {"op": "BINARY_OR", "ast": ["<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>", "(-(~1)-~<span class=\"dup\">2</span>)*<span class=\"dup\">5</span>"], "stack": ["160", "25"]}, {"op": "", "ast": ["<span class=\"dup\">5</span>&lt;&lt;<span class=\"dup\">5</span>|(-(~1)-~<span class=\"dup\">2</span>)*<span class=\"dup\">5</span>"], "stack": ["185"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>"], "stack": ["62", "62"]}, {"op": "BINARY_ADD", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>", "<span class=\"dup\">62</span>"], "stack": ["62", "62", "62"]}, {"op": "BINARY_ADD", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>+<span class=\"dup\">62</span>"], "stack": ["62", "124"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)+(<span class=\"dup\">62</span>+<span class=\"dup\">62</span>)"], "stack": ["186"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2"]}, {"op": "DUP_TOP", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "4"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">4</span>"], "stack": ["-2", "4", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>"], "stack": ["-2", "64"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)"], "stack": ["62"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>"], "stack": ["62", "62"]}, {"op": "BINARY_ADD", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>", "<span class=\"dup\">62</span>"], "stack": ["62", "62", "62"]}, {"op": "UNARY_INVERT", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "<span class=\"dup\">62</span>+<span class=\"dup\">62</span>"], "stack": ["62", "124"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)", "~(<span class=\"dup\">62</span>+<span class=\"dup\">62</span>)"], "stack": ["62", "-125"]}, {"op": "", "ast": ["~1%(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">4</span>)-~(<span class=\"dup\">62</span>+<span class=\"dup\">62</span>)"], "stack": ["187"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-6"]}, {"op": "BINARY_SUBTRACT", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-6</span>"], "stack": ["-2", "-6", "-2", "-6"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>"], "stack": ["-2", "-6", "4"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>"], "stack": ["-2", "-96"]}, {"op": "BINARY_MODULO", "ast": ["~1", "-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)"], "stack": ["-2", "96"]}, {"op": "DUP_TOP", "ast": ["~1%-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)"], "stack": ["94"]}, {"op": "BINARY_ADD", "ast": ["~1%-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)", "<span class=\"dup\">94</span>"], "stack": ["94", "94"]}, {"op": "", "ast": ["~1%-(<span class=\"dup\">-2</span>-<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>&lt;&lt;<span class=\"dup\">-2</span>-<span class=\"dup\">-6</span>)+<span class=\"dup\">94</span>"], "stack": ["188"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)"], "stack": ["-2", "-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-3</span>"], "stack": ["-2", "-3", "-2", "-3"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)", "<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["-2", "-3", "6"]}, {"op": "BINARY_XOR", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["-2", "-192"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1^~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["190"]}, {"op": "UNARY_INVERT", "ast": ["-(~1^~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>)"], "stack": ["-190"]}, {"op": "", "ast": ["~(-(~1^~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>))"], "stack": ["189"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "UNARY_INVERT", "ast": ["~1", "-<span class=\"dup\">-2</span>"], "stack": ["-2", "2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)"], "stack": ["-2", "-3"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-3</span>"], "stack": ["-2", "-3", "-2", "-3"]}, {"op": "BINARY_LSHIFT", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)", "<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["-2", "-3", "6"]}, {"op": "BINARY_XOR", "ast": ["~1", "~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["-2", "-192"]}, {"op": "", "ast": ["~1^~(-<span class=\"dup\">-2</span>)&lt;&lt;<span class=\"dup\">-2</span>*<span class=\"dup\">-3</span>"], "stack": ["190"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "6"]}, {"op": "UNARY_NEGATIVE", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["192"]}, {"op": "UNARY_INVERT", "ast": ["-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)"], "stack": ["-192"]}, {"op": "", "ast": ["~(-(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>))"], "stack": ["191"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "6"]}, {"op": "", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["192"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "6"]}, {"op": "UNARY_INVERT", "ast": ["1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["192"]}, {"op": "UNARY_NEGATIVE", "ast": ["~(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)"], "stack": ["-193"]}, {"op": "", "ast": ["-(~(1-~<span class=\"dup\">1</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>))"], "stack": ["193"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_NEGATIVE", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP", "ast": ["-(~1)"], "stack": ["2"]}, {"op": "UNARY_INVERT", "ast": ["-(~1)", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "UNARY_NEGATIVE", "ast": ["-(~1)", "~<span class=\"dup\">2</span>"], "stack": ["2", "-3"]}, {"op": "DUP_TOP_TWO", "ast": ["-(~1)", "-(~<span class=\"dup\">2</span>)"], "stack": ["2", "3"]}, {"op": "BINARY_MULTIPLY", "ast": ["-(~1)", "-(~<span class=\"dup\">2</span>)", "<span class=\"dup\">2</span>", "<span class=\"dup\">3</span>"], "stack": ["2", "3", "2", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["-(~1)", "-(~<span class=\"dup\">2</span>)", "<span class=\"dup\">2</span>*<span class=\"dup\">3</span>"], "stack": ["2", "3", "6"]}, {"op": "BINARY_XOR", "ast": ["-(~1)", "-(~<span class=\"dup\">2</span>)&lt;&lt;<span class=\"dup\">2</span>*<span class=\"dup\">3</span>"], "stack": ["2", "192"]}, {"op": "", "ast": ["-(~1)^-(~<span class=\"dup\">2</span>)&lt;&lt;<span class=\"dup\">2</span>*<span class=\"dup\">3</span>"], "stack": ["194"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "UNARY_INVERT", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "BINARY_SUBTRACT", "ast": ["1", "~<span class=\"dup\">1</span>"], "stack": ["1", "-2"]}, {"op": "DUP_TOP", "ast": ["1-~<span class=\"dup\">1</span>"], "stack": ["3"]}, {"op": "DUP_TOP_TWO", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>"], "stack": ["3", "3", "3", "3"]}, {"op": "BINARY_LSHIFT", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>", "<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "3", "6"]}, {"op": "BINARY_ADD", "ast": ["1-~<span class=\"dup\">1</span>", "<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>"], "stack": ["3", "192"]}, {"op": "", "ast": ["(1-~<span class=\"dup\">1</span>)+(<span class=\"dup\">3</span>&lt;&lt;<span class=\"dup\">3</span>+<span class=\"dup\">3</span>)"], "stack": ["195"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">14</span>"], "stack": ["14", "14"]}, {"op": "", "ast": ["(~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">14</span>"], "stack": ["196"]}], [{"op": "UNARY_INVERT", "ast": ["1"], "stack": ["1"]}, {"op": "DUP_TOP", "ast": ["~1"], "stack": ["-2"]}, {"op": "DUP_TOP_TWO", "ast": ["~1", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "-2", "-2"]}, {"op": "BINARY_POWER", "ast": ["~1", "<span class=\"dup\">-2</span>", "<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>"], "stack": ["-2", "-2", "4"]}, {"op": "BINARY_MODULO", "ast": ["~1", "(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["-2", "16"]}, {"op": "DUP_TOP", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)"], "stack": ["14"]}, {"op": "BINARY_MULTIPLY", "ast": ["~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>)", "<span class=\"dup\">14</span>"], "stack": ["14", "14"]}, {"op": "UNARY_INVERT", "ast": ["(~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">14</span>"], "stack": ["196"]}, {"op": "UNARY_NEGATIVE", "ast": ["~((~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">14</span>)"], "stack": ["-197"]}, {"op": "", "ast": ["-(~((~1%(<span class=\"dup\">-2</span>)**(<span class=\"dup\">-2</span>*<span class=\"dup\">-2</span>))*<span class=\"dup\">14</span>))"], "stack": ["197"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2"]}, {"op": "BINARY_OR", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>", "<span class=\"dup\">10</span>"], "stack": ["10", "10"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>"], "stack": ["100"]}, {"op": "UNARY_INVERT", "ast": ["-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>)"], "stack": ["-100"]}, {"op": "DUP_TOP", "ast": ["~(-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>))"], "stack": ["99"]}, {"op": "BINARY_ADD", "ast": ["~(-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>))", "<span class=\"dup\">99</span>"], "stack": ["99", "99"]}, {"op": "", "ast": ["~(-((1+<span class=\"dup\">1</span>|<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)*<span class=\"dup\">10</span>))+<span class=\"dup\">99</span>"], "stack": ["198"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_ADD", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["2", "10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)", "<span class=\"dup\">10</span>"], "stack": ["2", "10", "10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>", "(<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>"], "stack": ["2", "100"]}, {"op": "UNARY_NEGATIVE", "ast": ["(1+<span class=\"dup\">1</span>)*((<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>)"], "stack": ["200"]}, {"op": "UNARY_INVERT", "ast": ["-((1+<span class=\"dup\">1</span>)*((<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>))"], "stack": ["-200"]}, {"op": "", "ast": ["~(-((1+<span class=\"dup\">1</span>)*((<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>)))"], "stack": ["199"]}], [{"op": "DUP_TOP", "ast": ["1"], "stack": ["1"]}, {"op": "BINARY_ADD", "ast": ["1", "<span class=\"dup\">1</span>"], "stack": ["1", "1"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>"], "stack": ["2"]}, {"op": "DUP_TOP_TWO", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2"]}, {"op": "BINARY_LSHIFT", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>"], "stack": ["2", "2", "2", "2"]}, {"op": "BINARY_ADD", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>", "<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>"], "stack": ["2", "2", "8"]}, {"op": "DUP_TOP", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)"], "stack": ["2", "10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>", "<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>)", "<span class=\"dup\">10</span>"], "stack": ["2", "10", "10"]}, {"op": "BINARY_MULTIPLY", "ast": ["1+<span class=\"dup\">1</span>", "(<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>"], "stack": ["2", "100"]}, {"op": "", "ast": ["(1+<span class=\"dup\">1</span>)*((<span class=\"dup\">2</span>+(<span class=\"dup\">2</span>&lt;&lt;<span class=\"dup\">2</span>))*<span class=\"dup\">10</span>)"], "stack": ["200"]}]];
